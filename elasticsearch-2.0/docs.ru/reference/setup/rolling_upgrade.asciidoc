[[rolling-upgrades]]
=== Накатывающие обновления

Накатывающее обновление позволяет обновлять кластер Elasticsearch постепенно
по одному узлу в один момент времени без заметного времени простоя для конечных
пользователей. Запуск нескольких версий Elasticsearch в одном и том же
кластере для любого отрезка времени, необходимого для обновления, не поддерживается,
так как репликация шардов с более свежей версии на предыдущие версии работать
не будет.

Смотрите <<setup-upgrade,таблицу>>, чтобы проверить поддерживаются ли накатывающие
обноваления для вашей версии Elasticsearch.

Для выполнения накатывающего обновления:

==== Шаг 1: Выключите размещение реплик шардов

Когда вы погасите узел, процесс размещения реплик шардов будет немедленно пытаться
реплицировать шарды, которые были на этом узле на другие узлы в этом же кластере,
что приведёт к большой нагрузке подсистемы ввода/вывода. Этого можно избежать,
если выключить размещение шардов перед тем как погасить узел:

[source,js]
--------------------------------------------------
PUT /_cluster/settings
{
  "transient": {
    "cluster.routing.allocation.enable": "none"
  }
}
--------------------------------------------------
// AUTOSENSE

==== Шаг 2: Остановите некритичное для работы индексирование и выполните синхронный сброс буферов на диск (Необязательно)

Вы можете успешно продолжать индексирование во время обновления. Однако,
восстановление шарда будет намного более быстрым, если вы временно остановите
некритичное для работы индексирование и выполните запрос
<<indices-synced-flush, синхрованного сброса буферов на диск>>:

[source,js]
--------------------------------------------------
POST /_flush/synced
--------------------------------------------------
// AUTOSENSE

Запрос на синхронный сброс буферов является операцией ``наибольших усилий''.
Она завершится неудачно, если будут выполняться любые операции индексирования,
но её можно безопасно выполнять любое количество раз, которое необходимо.

[[upgrade-node]]
==== Шаг 3: Остановите и обновите узел

Погасите один из узлов в кластере *перед* запуском обновления.

[TIP]
================================================

При использовании zip или tar архивов, каталоги `config`, `data`, `logs`
и `plugins` по умолчанию размещаются внутри домашнего каталога Elasticsearch.

Хорошей идеей является разместить эти каталоги в каком-либо другом месте,
чтобы они не изменялись и не удалялись при обновлении Elasticsearch. Эти
специальные пути можно <<paths,сконфигурировать>> с помощью настроек
`path.config` и `path.data`.

Пакеты Debian и RPM размещают эти каталоги в <<setup-dir-layout,соответствующих>>,
для каждой операционной системы, местах.

================================================

Чтобы произвести обновления с помощью <<setup-repositories,Debian или RPM>>
пакета:

*   Используйте команду `rpm` или `dpkg` для установки нового пакета. Все
    файлы должны разместится в положенные для них места, а файлы конфигурации
    не должны быть перезаписаны.

*   Чтобы обновиться с помощью zip или tar архива:

*   Распакуйте zip или tar архив в новый каталог, чтобы быть уверенными, что
    вы не перезаписали каталоги `config` или `data`.

*   Или скопируйте файлы в каталог `config` из вашего старого домашнего каталога
    в новый, или используйте опцию командной строки `--path.config`, чтобы указать
    внешний каталог с конфигурацией.

*   Или скопируйте файлы в каталог `data` из вашего старого домашнего каталога
    в новый, или сконфигурируйте место для каталога с данными в файле
    `config/elasticsearch.yml`, с помощью настройки `path.data`.

==== Шаг 4: Запустите и обновите узел

Запустите обновлённый узел и подтвердите, что он поключился к кластеру,
проверив лог файл или результат запроса:

[source,sh]
--------------------------------------------------
GET _cat/nodes
--------------------------------------------------
// AUTOSENSE

==== Шаг 5: Включите размещение реплик шардов

После того как данный узел включился в кластер, включите размещение реплик шардов на
данном узле:

[source,js]
--------------------------------------------------
PUT /_cluster/settings
{
  "transient": {
    "cluster.routing.allocation.enable": "all"
  }
}
--------------------------------------------------
// AUTOSENSE

==== Шаг 6: Ждите восстановления работы узла

Вы должны подождать пока кластер не закончит размещение шардов перед обновлением
следующего узла. Вы можете проверить ход этого процесса с помощью запроса
<<cat-health,`_cat/health`>>:

[source,sh]
--------------------------------------------------
GET _cat/health
--------------------------------------------------
// AUTOSENSE

Ожидайте чтобы в поле `status` значение изменилось с `yellow` на `green`.
Статус `green` означает, что все первичные шарды и реплики были размещены.

[IMPORTANT]
====================================================
Во время накатывающего обновления, первичные шарды, размещённые на узле
с большей версией никогда не будут размещать свои реплики на узлах с
меньшей версией, потому что новая версия может иметь формат данных
отличный от старой и старая версия не будет его понимать.

Если невозможно разместить реплики шардов на другом узле с более высокой
версией -- например потому что в кластере есть только один узел с более
высокой версией -- то реплики шардов останутся неразмещёнными и кластер
будет оставаться в состоянии `yellow`.

В этом случае, проверьте, что нет инициализированных или перемещённых
шардов (поля `init` и `relo`) перед запуском обновления.

Как только другой узел обновится, реплики должны разместиться на нём и
кластер перейдёт в состояние `green`.

====================================================

Для шардов, для которых не был выполнен <<indices-synced-flush,синхронный сброс буферов>>
на диск, восстановление может занять некоторое время. Состояние восстановления
отдельных шардов можно мониторить с помощью запроса
<<cat-recovery,`_cat/recovery`>>:

[source,sh]
--------------------------------------------------
GET _cat/recovery
--------------------------------------------------
// AUTOSENSE

Если вы остановили индексирование, то после того как восстановление
завершится, его можно безопасно продолжить.

==== Step 7: Повтор

Когда кластер стабилизируется и узел восстановится, повторите вышеперечисленные
шаги для всех оставшихся узлов.

